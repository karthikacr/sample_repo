.TH lcov 1 "lcov 1.1" 2003-12-19 "User Manuals"
.SH NAME
lcov - GCOV coverage tool extension
.SH SYNOPSIS
.B lcov
.RB [ \-h | \-\-help ]
.RB [ \-v | \-\-version ]
.RS 5
.br
.RB [ \-q | \-\-quiet ]
.RB [ \-z | \-\-zerocounters ]
.RB [ \-c | \-\-capture ]
.br
.RB [ \-f | \-\-follow ]
.br
.RB [ \-t | \-\-test\-name
.IR testname ]
.br
.RB [ \-o | \-\-output\-file
.IR filename ]
.br
.RB [ \-d | \-\-directory
.IR directory ]
.br
.RB [ \-k | \-\-kernel\-directory
.IR directory ]
.br
.RB [ \-a | \-\-add\-tracefile
.IR tracefile ]
.br
.RB [ \-e | \-\-extract
.IR tracefile ]
.br
.RB [ \-r | \-\-remove
.IR tracefile ]
.br
.RB [ \-l | \-\-list
.IR tracefile ]
.br
.RB [ \-\-diff
.IR "tracefile diff" ]
.br
.RB [ \-\-no\-checksum ]
.br
.SH DESCRIPTION
.B lcov
is an extension of GCOV, a GNU tool which provides information
about what parts of a program are actually executed (i.e. "covered")
during a particular test case. The extension consists of a set
of PERL scripts which build on the textual GCOV output to implement
HTML output and support for large projects.

Use
.B lcov
to collect coverage data from either the currently running Linux kernel
or from a user space application. To do this, you have to complete the
following preparation steps:

For Linux kernel coverage:
.RS
Download and install the "gcov\-kernel" package from
.I http://sourceforge.net/projects/ltp

The resulting kernel module has to be installed either in the system wide
kernel modules directory or in the same directory as the LCOV tool.
Note that you will need root privileges to access kernel coverage data.

.RE
For user space application coverage:
.RS
Compile the application with GCC using the options
"\-fprofile\-arcs" and "\-ftest\-coverage".
.RE

Please note that this man page refers to the output format of
.B lcov
as ".info file" or "tracefile" and that the output of GCOV
is called ".da file".
.SH OPTIONS

.B \-h
.br
.B \-\-help
.RS
Print a short help text, then exit.
.RE

.B \-v
.br
.B \-\-version
.RS
Print version number, then exit.
.RE

.B \-q
.br
.B \-\-quiet
.RS
Do not print progress messages.

This option is implied when no output filename is specified to prevent
progress messages to mess with coverage data which is also printed to
the standard output.
.RE

.B \-z
.br
.B \-\-zerocounters
.RS
Reset all execution counts to zero.

By default tries to reset kernel execution counts. Use the \-\-directory
option to reset all counters of a user space program.

Only one of \-z, \-c, \-a, \-e, \-r, \-l and \-\-diff may be specified
at a time.
.RE

.B \-c
.br
.B \-\-capture
.RS
Capture coverage data.

By default captures the current kernel execution counts and writes the
resulting coverage data to the standard output. Use the \-\-directory
option to capture counts for a user space program.

Only one of \-z, \-c, \-a, \-e, \-r, \-l and \-\-diff may be specified
at a time.
.RE

.BI "\-f "
.br
.BI "\-\-follow "
.RS
Follow links when searching for .da files.
.RE

.BI "\-t " testname
.br
.BI "\-\-test\-name " testname
.RS
Specify test name to be stored in the tracefile.

This name helps distinguish coverage results in cases where data from
more than one test case is merged into a single file (i.e. by
simply concatenation the respective tracefiles). 

Valid characters for
.I testname
are alphanumerics plus "_".

.RE

.BI "\-o " filename
.br
.BI "\-\-output\-file " filename
.RS
Write data to FILENAME instead of stdout.

Specify "\-" as a filename to use the standard output. But that would be
pointless, wouldn't it? :)
.RE

.BI "\-d " directory
.br
.BI "\-\-directory " directory
.RS
Use .da files in
.I directory
instead of kernel.

If you want to work on coverage data for a user space program, use this
option to specify the location where the program was compiled (that's
where the counter files ending with .da will be stored).

Make sure that the resulting kernel module is copied either to the system
wide kernel module directory or to the directory which also holds the LCOV
tools. Note that you may specify more than one directory, all of which will be
processed sequentially.
.RE

.BI "\-k " kernel\-directory
.br
.BI "\-\-kernel\-directory " kernel\-directory
.RS
Capture kernel coverage data only from
.IR kernel\-directory .

Use this option if you don't want to get coverage data for all of the
kernel, but only for specific subdirectories.

Note that you may specify more than one directory, all of which will be
processed sequentially.
.RE

.BI "\-a " tracefile
.br
.BI "\-\-add\-tracefile " tracefile
.RS
Add contents of
.IR tracefile .

Specify several tracefiles using the \-a switch to combine the coverage data
contained in these files by adding up execution counts for matching test and
filename combinations.

Note that due to the way data is stored in tracefiles, the resulting file may
be smaller in size than the original ones.

Only one of \-z, \-c, \-a, \-e, \-r, \-l and \-\-diff may be specified
at a time.

.RE
.BI "\-e " tracefile
.br
.BI "\-\-extract " tracefile
.RS
Extract data from
.IR tracefile .

Use this switch if you want to extract coverage data for only a particular
set of files from a tracefile. Additional command line parameters will be
interpreted as shell wildcard patterns (note that they may need to be
escaped accordingly to prevent the shell from expanding them first).
Every file entry in
.I tracefile
which matches at least one of those patterns will be extracted.

Only one of \-z, \-c, \-a, \-e, \-r, \-l and \-\-diff may be specified
at a time.

.RE
.BI "\-r " tracefile
.br
.BI "\-\-remove " tracefile
.RS
Remove data from
.IR tracefile .

Use this switch if you want to remove coverage data for a particular
set of files from a tracefile. Additional command line parameters will be
interpreted as shell wildcard patterns (note that they may need to be
escaped accordingly to prevent the shell from expanding them first).
Every file entry in
.I tracefile
which matches at least one of those patterns will be removed.

Only one of \-z, \-c, \-a, \-e, \-r, \-l and \-\-diff may be specified
at a time.

.RE
.BI "\-l " tracefile
.br
.BI "\-\-list " tracefile
.RS
List the contents of the
.IR tracefile .

Only one of  \-z, \-c, \-a, \-e, \-r, \-l and \-\-diff may be specified
at a time.

.RE
.BI "\-\-diff " "tracefile difffile"
.RS
Convert coverage data in
.I tracefile
using source code diff file
.IR difffile .

Use this option if you want to merge coverage data from different source code
levels of a program, e.g. when you have data taken from an older version
and want to combine it with data from a more current version.
.B lcov
will try to map source code lines between those versions and adjust the coverage
data respectively.
.I difffile
needs to be in unified format, i.e. it has to be created using the '\-u' option
of the
.B diff
tool.

Note that lines which are not present in the old version will not be counted
as instrumented, therefore tracefiles resulting from this operation should
not be interpreted individually but together with other tracefiles taken
from the newer version. Also keep in mind that converted coverage data should
only be used for overview purposes as the process itself introduces a loss
of accuracy.

Only one of \-z, \-c, \-a, \-e, \-r, \-l and \-\-diff may be specified
at a time.

.RE
.B "\-\-no\-checksum"
.RS
Do not generate checksum data when writing tracefiles.

By default, each line of coverage data is associated with a checksum of the
corresponding source code line. This checksum is used to prevent merging
coverage data from incompatible source code versions. Use this option to
suppress generating such checksums for tracefiles.

.RE
.SH AUTHOR
Peter Oberparleiter <Peter.Oberparleiter@de.ibm.com>

.SH SEE ALSO
.BR genhtml (1),
.BR geninfo (1),
.BR genpng (1),
.BR gendesc (1),
.BR gcov (1)
